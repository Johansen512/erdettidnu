{"version":3,"sources":["Contexts/dataContext.js","Components/Themebutton.js","Components/Dateform.js","Views/Formview.js","Components/Timedisplay.js","Views/Displayview.js","App.js","reportWebVitals.js","index.js"],"names":["dataContext","createContext","DataContextProvider","props","useState","numdays","setNumdays","numhours","setNumhours","numminutes","setNumminutes","numseconds","setNumseconds","textstring","setTextstring","currentDate","setCurrentDate","diffSeconds","setDiffSeconds","futureDate","setFutureDate","Provider","value","children","Themebutton","buttimage","themeprop","themebutton","css","onClick","e","localStorage","setItem","Dateform","displaystate","show","setShow","dateformstyle","newbutton","inputstyle","buttonwrapper","billboardstyle","useContext","useEffect","magicDate","getItem","magicText","useForm","register","handleSubmit","errors","onSubmit","data","console","log","dato","hours","aftertext","datestring","myEpoch","Date","getTime","htmlFor","type","name","ref","required","step","placeholder","exampleRequired","date2","setMinutes","getMinutes","Poch","navigate","Formview","Timedisplay","themepic","prop","themepic2","timedisplaystyle","pstyle","setTimeout","now","Math","floor","Displayview","App","gotDate","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de8c684b.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const dataContext = createContext();\r\n\r\n\r\nconst DataContextProvider = (props) => {\r\n    const [numdays, setNumdays] = useState (null);\r\n    const [numhours, setNumhours] = useState (null);\r\n    const [numminutes, setNumminutes] = useState (null);\r\n    const [numseconds, setNumseconds] = useState (null);\r\n    const [textstring, setTextstring] = useState (null);\r\n    const [currentDate, setCurrentDate] = useState (null);\r\n    const [diffSeconds, setDiffSeconds] = useState (null);\r\n    const [futureDate, setFutureDate] = useState (null); \r\n    //const [themepic, setThemepic] = useState (null); \r\n\r\n    \r\n\r\n   \r\n\r\n   \r\n    return (<dataContext.Provider value={{ numdays, numhours, numminutes, numseconds, textstring, currentDate,  diffSeconds,  futureDate, setNumdays, setNumhours, setNumminutes, setNumseconds, setTextstring, setCurrentDate, setDiffSeconds, setFutureDate }}>\r\n\r\n    {props.children}\r\n    </dataContext.Provider>\r\n\r\n    );\r\n};\r\n \r\nexport default DataContextProvider;","/**@jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react'\r\n\r\n\r\nconst Themebutton= ({buttimage, themeprop}) => {\r\n\r\n    const themebutton = css`\r\n\r\nbackground-image:url(../img/${buttimage}.jpg);\r\nfont-size: 1.3rem;\r\n margin: 0.5rem;\r\n padding: 0.5rem;\r\n width: 5rem;\r\n height: 5rem;\r\n border: 8px solid #3a799d;\r\nbackground-color: #4c93bc;\r\noverflow:hidden;\r\npadding: 0.5rem;\r\nmargin: 0.5rem;\r\nborder-radius:50%;\r\n\r\n`;\r\n\r\n\r\nfunction handleTheme(e) {\r\n       \r\n    \r\n    localStorage.setItem('mybackInLocalStorage', themeprop)\r\n  }\r\n\r\n    return ( \r\n\r\n<div>\r\n    <button css={themebutton} onClick={handleTheme}/>\r\n    </div>\r\n    \r\n\r\n     );\r\n}\r\n \r\nexport default Themebutton;","/**@jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react'\r\nimport { useEffect, useContext, useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dataContext } from \"../Contexts/dataContext\"\r\nimport { navigate } from \"@reach/router\";\r\nimport Themebutton from \"../Components/Themebutton\";\r\n\r\n\r\n  \r\nconst Dateform = ({ buttimage, themeprop, displaystate, props }) => {\r\nconst [show, setShow] = useState (false)\r\n  const dateformstyle = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n  margin: 0.5rem;\r\n  border: 10px solid #184d6c;\r\n  \r\n  background-color: lightblue;\r\n  font-size: 2rem;\r\n  @media (max-width: 400px) {\r\n        font-size: 1.2rem;\r\n      }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  `;\r\n\r\nconst newbutton = css`\r\n\r\nborder: 10px solid #3a799d;\r\nbackground-color: #4c93bc;\r\npadding: 0.5rem;\r\nmargin: 0.5rem;\r\nfont-size:2rem;\r\n@media (max-width: 400px) {\r\n        font-size: 1.2rem;\r\n      }\r\nborder-radius:20rem;\r\n\r\n\r\n`;\r\n\r\nconst inputstyle = css`\r\n font-size: 1.3rem;\r\n margin: 0.5rem;\r\n padding: 0.5rem;\r\n max-width: 30rem;\r\nmin-width: 14rem;\r\n\r\n`;\r\n\r\nconst buttonwrapper = css`\r\ndisplay: flex;\r\nflex-direction: row;\r\nwidth:18rem;\r\noverflow:scroll;\r\noverflow-x:hidden;\r\noverflow-y:hidden;\r\npadding: 0.5rem;\r\n`;\r\n\r\n\r\n    \r\n    \r\n  \r\n\r\n    const billboardstyle= css`\r\n    \r\n    display: ${show ? \"block\" : \"none\" };\r\n    max-width: 24rem;\r\n    min-width: 14rem;\r\n    border: solid 1rem #b46612;\r\n    background-color: goldenrod;\r\n    border-style:ridge;\r\n    padding:0.5rem;\r\n    \r\n    \r\n    `;\r\n\r\n\r\n\r\n\r\n  \r\n /* const {setNumdays}=useContext(dataContext);\r\n  const {setNumhours}=useContext(dataContext);\r\n  const {setNumminutes}=useContext(dataContext);\r\n  const {setNumseconds}=useContext(dataContext);\r\n  const {textstring}=useContext(dataContext);\r\n   const {currentDate}=useContext(dataContext);\r\n  const {diffSeconds}=useContext(dataContext);\r\n  const {dagsdato}=useContext(dataContext);\r\n  const {setCurrentDate}=useContext(dataContext);\r\n  const {setDiffSeconds}=useContext(dataContext);\r\n  const {setDagsdato}=useContext(dataContext);*/\r\n\r\n  const {setFutureDate}=useContext(dataContext);\r\n  const {setTextstring}=useContext(dataContext);\r\n  const {futureDate}=useContext(dataContext);\r\n\r\n \r\n\r\n  useEffect(()=>{\r\n\r\n    let magicDate = localStorage.getItem('myValueInLocalStorage');\r\n    let magicText = localStorage.getItem('mytextInLocalStorage');\r\n    \r\n  setFutureDate(magicDate);\r\n    setTextstring(magicText)\r\n\r\n  }, [setFutureDate,setTextstring ])\r\n  \r\n  \r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = data => {\r\n      \r\n      console.log (data.dato, data.hours, data.aftertext)\r\n    const datestring = data.dato + \"T\" + data.hours;\r\n    \r\n    setTextstring (data.aftertext)\r\n    \r\n    console.log(datestring);\r\n      var myDate = new Date(datestring); \r\n      var myEpoch = myDate.getTime();\r\n      \r\n      \r\n        localStorage.setItem('myValueInLocalStorage', myEpoch)\r\n        localStorage.setItem('mytextInLocalStorage', data.aftertext);\r\n        \r\n        console.log (myEpoch);\r\n        \r\n        setFutureDate(new Date (myEpoch))\r\n        \r\n        console.log (\"future date from context: \",futureDate)\r\n      \r\n    \r\n    };\r\n\r\n  \r\n \r\n    \r\nfunction handleClick(e) {\r\n\r\n  const date2 = new Date();\r\n  date2.setMinutes( date2.getMinutes() + 30 );\r\n\r\n  let Poch = new Date().getTime()\r\n  let num = 60000\r\n  let Poch2 = Poch+num\r\n \r\n\r\nlet testting = futureDate > Poch2\r\n\r\ntestting ?  navigate(\"/displayview\") : setShow (true)\r\n\r\n  \r\n}\r\n\r\n\r\n    return (\r\n        <section>\r\n    <form css={dateformstyle} onSubmit={handleSubmit(onSubmit)}>\r\n    \r\n    <label  htmlFor=\"number\">Vælg dato og tid</label>\r\n      \r\n      <input css={inputstyle}type='date' name=\"dato\"  ref={register({ required: true })} />\r\n      <input css={inputstyle}type='time' step=\"1\" name=\"hours\"  ref={register({ required: true })} />\r\n      <input css={inputstyle}type='text' placeholder=\"Skriv noget ... f.eks. 'til jul'\"name=\"aftertext\"  ref={register({ required: true })} />\r\n    \r\n      \r\n      {errors.exampleRequired && <span>This field is required</span>}\r\n      \r\n      <input css={newbutton} type=\"submit\" value=\"Gør det!\" onClick={handleClick} />\r\n      <input css={newbutton} type=\"reset\" value=\"Nulstil\" />\r\n      <p css={billboardstyle}>DU KAN JO IKKE TÆLLE NED TIL FORTIDEN, VEL?  PRØV IGEN!</p>\r\n      <p>Vælg tema</p>\r\n      \r\n      <div css={buttonwrapper}>\r\n        \r\n<Themebutton  buttimage=\"xmasSmall\" themeprop=\"christmas\"/>\r\n<Themebutton  buttimage=\"birthdaySmall\" themeprop=\"birthday\"/>\r\n<Themebutton  buttimage=\"holidaySmall\" themeprop=\"holiday\"/>\r\n\r\n</div>\r\n    </form>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n</section>\r\n\r\n      );\r\n}\r\n \r\nexport default Dateform;\r\n\r\n","import Dateform from \"../Components/Dateform\"\r\n\r\nconst Formview = () => {\r\n\r\n   \r\n    return (  \r\n<div >\r\n<Dateform />\r\n</div>\r\n\r\n\r\n    );\r\n}\r\n \r\nexport default Formview;\r\n\r\n","/**@jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react'\r\nimport {  useEffect, useContext} from 'react';\r\nimport { dataContext } from \"../Contexts/dataContext\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nconst Timedisplay = ({themepic, prop}) => {\r\nconst themepic2=localStorage.getItem (\"mybackInLocalStorage\")\r\n\r\n  const timedisplaystyle = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: lightblue;\r\n  font-size: 2rem;\r\n  background-image: url(../img/${themepic2}.jpg);\r\n  overflow: hidden;\r\n  background-repeat: no-repeat;\r\n  padding: 0.5rem;\r\n  margin: 0.5rem;\r\n  border: 10px solid #184d6c;\r\n  \r\n  `;\r\n\r\nconst newbutton = css`\r\nmax-width: 30rem;  \r\nbackground-color: #4c93bc;\r\nborder: 10px solid #3a799d;\r\n\r\npadding: 0.5rem;\r\nmargin: 0.5rem;\r\nmargin-bottom:30rem;\r\nfont-size:2rem;\r\n@media (max-width: 400px) {\r\n        font-size: 1.2rem;}\r\nborder-radius:20rem;\r\nbox-shadow:2px 2px 5px #05334e;\r\n`;\r\n\r\nconst pstyle = css`\r\n\r\nborder: 10px solid #61a5cc;\r\nbackground-color: #ffffff;\r\nborder-style:ridge;\r\npadding: 0.5rem;\r\nmargin: 0.5rem;\r\nfont-size:2rem;\r\n@media (max-width: 400px) {\r\n        font-size: 1rem;\r\n      }\r\nmax-width: 30rem;\r\nmin-width: 14rem;\r\n\r\n`;\r\n\r\n\r\n\r\n\r\n    const {numdays, setNumdays}=useContext(dataContext)\r\n    const {numhours, setNumhours}=useContext(dataContext)\r\n    const {numminutes, setNumminutes }=useContext(dataContext)\r\n    const {numseconds, setNumseconds}=useContext(dataContext)\r\n    const {textstring, setTextstring}=useContext(dataContext)\r\n    const {diffSeconds, setFutureDate,futureDate,setDiffSeconds,currentDate,setCurrentDate,}=useContext(dataContext)\r\n\r\n    \r\n   setFutureDate(localStorage.getItem(\"myValueInLocalStorage\"));\r\n   setTextstring(localStorage.getItem(\"mytextInLocalStorage\"));\r\n\r\n    useEffect(() => {\r\n        //const timer = \r\n        \r\n        setTimeout(() => {\r\n          setCurrentDate(Date.now());\r\n          setDiffSeconds((futureDate - currentDate)/1000)\r\n      \r\n          setNumdays( Math.floor(diffSeconds / 86400));\r\n      \r\n          setNumhours ( Math.floor((diffSeconds % 86400) / 3600));\r\n      \r\n         setNumminutes(Math.floor(((diffSeconds % 86400) % 3600) / 60));\r\n      \r\n          setNumseconds(Math.floor ((diffSeconds % 86400) % 3600) % 60);\r\n      \r\n      \r\n        }, 1000);\r\n       ;\r\n      }, [ currentDate, setNumseconds, setCurrentDate, setDiffSeconds, setNumdays, setNumhours, setNumminutes, diffSeconds, futureDate]);\r\n\r\n\r\n      function handleClick(e) {\r\n       \r\n        //console.log('The link was clicked.');\r\n        navigate(\"/\");\r\n      }\r\n    return ( \r\n<section css={timedisplaystyle}>\r\n        <p css={pstyle}>{numdays}  dage</p><p css={pstyle}>{numhours}  timer</p><p css={pstyle}>{numminutes}   minutter</p><p css={pstyle}> {numseconds}  sekunder</p><p css={pstyle}>{textstring}</p>\r\n\r\n       \r\n        <button css={newbutton} onClick={handleClick} >Start en ny nedtælling</button>\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default Timedisplay;","import Timedisplay from \"../Components/Timedisplay\"\r\n\r\nconst Displayview = () => {\r\n\r\n   \r\n    return (  \r\n<div >\r\n<Timedisplay />\r\n</div>\r\n\r\n\r\n    );\r\n}\r\n \r\nexport default Displayview;\r\n\r\n","import './App.css';\r\nimport Formview from \"./Views/Formview\"\r\nimport Displayview from \"./Views/Displayview\"\r\nimport { Router, navigate } from \"@reach/router\";\r\nimport DataContextProvider from \"./Contexts/dataContext\"\r\n\r\nfunction App() {\r\n\r\n  const gotDate = localStorage.getItem(\"myValueInLocalStorage\")\r\nconsole.log (gotDate)\r\n\r\nfunction GoDate() {\r\n  \r\n    navigate(\"/displayview\");\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n{gotDate && GoDate()  }\r\n\r\n\r\n<DataContextProvider>\r\n     <Router >\r\n     \r\n     <Formview path=\"/\" />\r\n     <Displayview path= \"/displayview\" />\r\n      \r\n                    \r\n                </Router>\r\n      \r\n     \r\n                </DataContextProvider>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}